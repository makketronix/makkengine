package com.makketronix.makkengine.testobjects;

import com.makketronix.makkengine.makkobjects.GLTextureObject;
import com.makketronix.makkengine.makkobjects.ShapeData;

public class TopSide extends ShapeData {


	@Override
	public float[] setVertices(){
		float[] verts = {
			7.648862f, 4.461955f, 0.185691f, 
			7.648861f, 0.016206f, 0.185691f, 
			7.648861f, 0.016206f, -0.184446f, 
			7.648861f, 0.016206f, 0.185691f, 
			3.832324f, 0.016207f, 0.185691f, 
			3.832324f, 0.016207f, 0.093156f, 
			-7.617290f, 0.016208f, 0.185691f, 
			-7.617289f, 4.461957f, 0.185691f, 
			-7.617289f, 4.461957f, -0.184446f, 
			7.648862f, 4.461955f, 0.185691f, 
			7.648862f, 4.461955f, -0.184446f, 
			-7.617289f, 4.461957f, 0.185691f, 
			7.648862f, 4.461955f, -0.184446f, 
			7.648861f, 0.016206f, -0.184446f, 
			-7.617290f, 0.016208f, -0.184446f, 
			-7.617289f, 4.461957f, 0.185691f, 
			-7.617290f, 0.016208f, 0.185691f, 
			0.015786f, 2.239081f, 0.185691f, 
			7.648862f, 4.461955f, -0.184446f, 
			7.648861f, 0.016206f, -0.184446f, 
			-7.617290f, 0.016208f, -0.184446f, 
			-7.617289f, 4.461957f, -0.184446f, 
			-7.617289f, 4.461957f, -0.184446f, 
			7.648862f, 4.461955f, 0.185691f, 
			-1.649044f, 0.035161f, 0.176367f, 
			-1.311467f, 0.361619f, 0.176367f, 
			-1.311467f, 0.361619f, -0.176367f, 
			1.268852f, 0.361619f, 0.176367f, 
			1.311467f, 0.361619f, 0.176367f, 
			1.311467f, 0.361619f, -0.176367f, 
			1.311467f, 0.361619f, 0.176367f, 
			1.755597f, 0.031568f, 0.176367f, 
			1.755597f, 0.031568f, -0.176367f, 
			-1.273398f, -0.361619f, 0.176367f, 
			-1.649044f, 0.035161f, 0.176367f, 
			-1.649044f, 0.035161f, -0.176367f, 
			1.268852f, -0.361619f, -0.176367f, 
			1.268852f, 0.361619f, -0.176367f, 
			1.755597f, 0.031568f, -0.176367f, 
			-1.273398f, -0.361619f, 0.176367f, 
			-1.273398f, 0.361619f, 0.176367f, 
			-1.649044f, 0.035161f, 0.176367f, 
			-1.273398f, 0.361619f, 0.176367f, 
			0.000000f, 0.361619f, 0.176367f, 
			0.000000f, 0.361619f, -0.176367f, 
			1.268852f, -0.361619f, 0.176367f, 
			0.000000f, -0.361619f, 0.176367f, 
			0.000000f, -0.361619f, -0.176367f, 
			-1.273398f, -0.361619f, -0.176367f, 
			-1.273398f, 0.361619f, -0.176367f, 
			0.000000f, 0.361619f, -0.176367f, 
			1.268852f, -0.361619f, 0.176367f, 
			1.268852f, 0.361619f, 0.176367f, 
			0.000000f, 0.361619f, 0.176367f, 
			1.268852f, 0.361619f, -0.176367f, 
			0.000000f, -0.361619f, -0.176367f, 
			1.755597f, 0.031568f, 0.176367f, 
			1.268852f, -0.361619f, 0.176367f, 
			1.268852f, -0.361619f, -0.176367f, 
			1.755597f, 0.031568f, 0.176367f, 
			1.311467f, 0.361619f, 0.176367f, 
			1.268852f, 0.361619f, 0.176367f, 
			-1.273398f, -0.361619f, 0.176367f, 
			-1.273398f, -0.361619f, -0.176367f, 
			0.000000f, -0.361619f, 0.176367f, 
			0.000000f, 0.361619f, 0.176367f, 
			-1.273398f, 0.361619f, 0.176367f, 
			-1.311467f, 0.361619f, 0.176367f, 
			-1.273398f, 0.361619f, -0.176367f, 
			-1.649044f, 0.035161f, -0.176367f, 
			-1.311467f, 0.361619f, -0.176367f, 
			-3.800752f, 0.016208f, -0.091912f, 
			-7.617290f, 0.016208f, 0.185691f, 
			-7.617290f, 0.016208f, -0.184446f, 
			-3.800752f, 0.016208f, 0.185691f, 
			0.015786f, 0.016207f, 0.000622f, 
			0.015786f, 0.016207f, 0.185691f, 
			0.015786f, 0.016207f, 0.000622f, 
			-3.800752f, 0.016208f, 0.185691f, 
			0.015786f, 0.016207f, 0.185691f, 
			3.832324f, 0.016207f, 0.185691f, 
			7.648861f, 0.016206f, 0.185691f, 
			-1.649044f, 0.035161f, -0.176367f, 
			1.311467f, 0.361619f, -0.176367f, 
			-1.273398f, -0.361619f, -0.176367f, 
			1.311467f, 0.361619f, -0.176367f, 
			-1.273398f, 0.361619f, 0.176367f, 
			-1.311467f, 0.361619f, 0.176367f, 
			-1.649044f, 0.035161f, 0.176367f, 
			1.268852f, -0.361619f, -0.176367f, 
			1.755597f, 0.031568f, -0.176367f, 
			1.755597f, 0.031568f, 0.176367f, 
			1.268852f, 0.361619f, 0.176367f, 
			-1.311467f, 0.361619f, -0.176367f, 
			-1.273398f, -0.361619f, -0.176367f
			};

		return verts;
	}


	@Override
	public float[] setNormals(){
		float[] normals = {
			1.000000f, -0.000000f, 0.000000f, 
			1.000000f, -0.000000f, 0.000000f, 
			1.000000f, -0.000000f, 0.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			-1.000000f, 0.000000f, 0.000000f, 
			-1.000000f, 0.000000f, 0.000000f, 
			-1.000000f, 0.000000f, 0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, 0.000000f, -1.000000f, 
			0.000000f, 0.000000f, -1.000000f, 
			0.000000f, 0.000000f, -1.000000f, 
			0.000000f, -0.000000f, 1.000000f, 
			0.000000f, -0.000000f, 1.000000f, 
			0.000000f, -0.000000f, 1.000000f, 
			1.000000f, -0.000000f, 0.000000f, 
			-0.000000f, -1.000000f, -0.000000f, 
			-1.000000f, 0.000000f, 0.000000f, 
			0.000000f, 1.000000f, 0.000000f, 
			0.000000f, 0.000000f, -1.000000f, 
			-0.000000f, -0.000000f, 1.000000f, 
			-0.695169f, 0.718846f, 0.000000f, 
			-0.695169f, 0.718846f, 0.000000f, 
			-0.695169f, 0.718846f, 0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.596470f, 0.802635f, -0.000000f, 
			0.596470f, 0.802635f, -0.000000f, 
			0.596470f, 0.802635f, -0.000000f, 
			-0.726181f, -0.687503f, 0.000000f, 
			-0.726181f, -0.687503f, 0.000000f, 
			-0.726181f, -0.687503f, 0.000000f, 
			-0.000000f, -0.000000f, -1.000000f, 
			-0.000000f, -0.000000f, -1.000000f, 
			-0.000000f, -0.000000f, -1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, -1.000000f, 0.000000f, 
			0.000000f, -1.000000f, 0.000000f, 
			0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, -0.000000f, -1.000000f, 
			-0.000000f, -0.000000f, -1.000000f, 
			-0.000000f, -0.000000f, -1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			-0.000000f, -0.000000f, -1.000000f, 
			0.628382f, -0.777905f, 0.000000f, 
			0.628382f, -0.777905f, 0.000000f, 
			0.628382f, -0.777905f, 0.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			0.000000f, -1.000000f, 0.000000f, 
			0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			-0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			0.000000f, 1.000000f, -0.000000f, 
			-0.000000f, 0.000000f, -1.000000f, 
			-0.000000f, 0.000000f, -1.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, -1.000000f, -0.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			-0.000000f, -1.000000f, 0.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			-0.695169f, 0.718846f, 0.000000f, 
			0.596470f, 0.802635f, 0.000000f, 
			-0.726181f, -0.687503f, -0.000000f, 
			0.000000f, 0.000000f, -1.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			0.000000f, -1.000000f, 0.000000f, 
			0.628382f, -0.777905f, 0.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 0.000000f, 1.000000f, 
			0.000000f, 1.000000f, 0.000000f, 
			0.000000f, -0.000000f, -1.000000f
			};

		return normals;
	}


	@Override
	public float[] setColors(){
		float[] colors = {
			0.529f, 0.451f, 0.624f, 
			0.490f, 0.498f, 0.706f, 
			0.451f, 0.549f, 0.796f, 
			0.490f, 0.498f, 0.706f, 
			0.529f, 0.447f, 0.612f, 
			0.478f, 0.510f, 0.725f, 
			0.651f, 0.306f, 0.341f, 
			0.510f, 0.478f, 0.667f, 
			0.455f, 0.545f, 0.792f, 
			0.529f, 0.451f, 0.624f, 
			0.451f, 0.549f, 0.796f, 
			0.510f, 0.475f, 0.667f, 
			0.451f, 0.549f, 0.800f, 
			0.451f, 0.549f, 0.796f, 
			0.451f, 0.549f, 0.796f, 
			0.800f, 0.122f, 0.000f, 
			0.800f, 0.122f, 0.000f, 
			0.800f, 0.122f, 0.000f, 
			0.451f, 0.549f, 0.796f, 
			0.451f, 0.549f, 0.796f, 
			0.451f, 0.549f, 0.796f, 
			0.455f, 0.545f, 0.792f, 
			0.455f, 0.545f, 0.792f, 
			0.800f, 0.125f, 0.004f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.043f, 0.404f, 0.000f, 
			0.090f, 0.902f, 0.000f, 
			0.063f, 0.404f, 0.024f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.043f, 0.404f, 0.000f, 
			0.086f, 0.890f, 0.000f, 
			0.090f, 0.902f, 0.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.043f, 0.467f, 0.000f, 
			0.086f, 0.863f, 0.000f, 
			0.078f, 0.788f, 0.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.043f, 0.467f, 0.000f, 
			0.090f, 0.902f, 0.000f, 
			0.110f, 0.890f, 0.020f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.090f, 0.898f, 0.000f, 
			0.043f, 0.467f, 0.000f, 
			0.047f, 0.384f, 0.008f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.043f, 0.404f, 0.000f, 
			0.047f, 0.388f, 0.008f, 
			0.086f, 0.863f, 0.000f, 
			0.090f, 0.902f, 0.000f, 
			0.102f, 0.890f, 0.012f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.459f, 0.533f, 0.773f, 
			0.651f, 0.306f, 0.341f, 
			0.451f, 0.549f, 0.796f, 
			0.608f, 0.353f, 0.431f, 
			0.471f, 0.522f, 0.749f, 
			0.090f, 0.902f, 0.000f, 
			0.086f, 0.898f, 0.000f, 
			0.800f, 0.122f, 0.000f, 
			0.090f, 0.902f, 0.000f, 
			0.800f, 0.122f, 0.000f, 
			0.800f, 0.122f, 0.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.047f, 0.388f, 0.008f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			1.000f, 1.000f, 1.000f, 
			0.047f, 0.384f, 0.008f, 
			0.094f, 0.416f, 0.059f, 
			0.090f, 0.898f, 0.000f, 
			0.075f, 0.749f, 0.000f, 
			1.000f, 1.000f, 1.000f, 
			0.141f, 0.451f, 0.106f
			};

		return colors;
	}


	@Override
	public short[] setDrawOrder(){
		short[] order = {
			3, 4, 5, 
			6, 7, 8, 
			9, 10, 11, 
			12, 13, 14, 
			15, 16, 17, 
			18, 0, 2, 
			19, 3, 5, 
			20, 6, 8, 
			11, 10, 21, 
			22, 12, 14, 
			23, 15, 17, 
			24, 25, 26, 
			27, 28, 29, 
			30, 31, 32, 
			33, 34, 35, 
			36, 37, 38, 
			39, 40, 41, 
			42, 43, 44, 
			45, 46, 47, 
			48, 49, 50, 
			51, 52, 53, 
			43, 27, 54, 
			55, 50, 37, 
			56, 57, 58, 
			59, 60, 61, 
			46, 62, 63, 
			64, 65, 66, 
			67, 42, 68, 
			69, 70, 49, 
			71, 72, 73, 
			71, 74, 72, 
			75, 74, 71, 
			76, 74, 77, 
			4, 76, 5, 
			76, 77, 5, 
			16, 78, 17, 
			78, 79, 17, 
			79, 80, 17, 
			80, 81, 17, 
			73, 19, 71, 
			19, 5, 75, 
			71, 19, 75, 
			81, 23, 17, 
			82, 24, 26, 
			54, 27, 29, 
			83, 30, 32, 
			84, 33, 35, 
			37, 85, 38, 
			86, 87, 88, 
			68, 42, 44, 
			89, 45, 47, 
			55, 48, 50, 
			64, 51, 65, 
			44, 43, 54, 
			36, 55, 37, 
			90, 56, 58, 
			51, 91, 92, 
			47, 46, 63, 
			39, 64, 40, 
			93, 67, 68, 
			94, 69, 49
			};

		return order;
	}

	@Override
	public float[] setTextures() {
		// TODO Auto-generated method stub
		float[] coor = {0f};
		return coor;
	}

	@Override
	public short[][] setCoarseAndMap() {
		// TODO Auto-generated method stub
		return null;
		
	}

	@Override
	protected void initObject() {
		// TODO Auto-generated method stub
		
	}

}
